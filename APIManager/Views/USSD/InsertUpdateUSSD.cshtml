@using APIManager.Models
@model RequestViewModel

@{
    ViewData["Title"] = "Edit Request";
}

<h2>Edit Request</h2>

<form asp-action="InsertUpdateUSSD" method="post">
    <input asp-for="Route.RouteBody.RouteBodyId" type="hidden" />
    <input id="hdn-method-type-name" asp-for="Route.MethodType.MethodTypeName" type="hidden"/>
    <input id="hdn-route-type-name" asp-for="Route.RouteType.RouteTypeName" type="hidden"/>
    <input id="hdn-application-type-name" asp-for="Route.RouteBody.ApplicationType.ApplicationTypeName" type="hidden"/>
    <input asp-for="Route.RouteBody.RouteId" type="hidden" />
    <input asp-for="Route.RouteBody.BodyType.BodyTypeName" type="hidden" />
    <input asp-for="Route.RouteBody.BodyType.BodyTypeId" type="hidden" />
    <input asp-for="Route.RouteId" type="hidden"/>
    @Html.DropDownList("DataTypes", new SelectList(Model.DataTypes.Items, "Value", "Text"), null, new { @class = "d-none select-data-type" })
    <div class="row mt-3">
        <div class="form-group">
            <label asp-for="Route.RouteName" class="control-label fw-bold"></label>
            <input asp-for="Route.RouteName" class="form-control" />
            <span asp-validation-for="Route.RouteName" class="text-danger"></span>
        </div>
    </div>
    
    <div class="row mt-3">
        <div class="form-group">
            <label asp-for="Route.RoutePath" class="control-label fw-bold"></label>
            <input asp-for="Route.RoutePath" class="form-control" />
            <span asp-validation-for="Route.RoutePath" class="text-danger"></span>
        </div>
    </div>

    <div class="row mt-3">
        <div class="form-group col-6">
            <label class="control-label fw-bold">Route Type</label>
            @Html.DropDownListFor(
                     model => model.Route.RouteType.RouteTypeId,
                     new SelectList(
                     Model.RouteTypes.Items,
                     "Value",
                     "Text",
                     Model.Route.RouteType
                     ),
                     new { @class = "form-control data-type-select-list", @id = "select-list-route-types" }
                     )
        </div>

        <div class="form-group col-6">
            <label asp-for="Route.Order" class="control-label fw-bold"></label>
            <input asp-for="Route.Order" class="form-control" />
            <span asp-validation-for="Route.Order" class="text-danger"></span>
        </div>
    </div>

    <!--EXPAND ON ROUTE HEADERS HERE-->
    <div class="row mt-3">
        <label class="control-label fw-bold">Route Headers</label>
        <div class="table-responsive table-route-headers">
            <table id="table-route-headers" class="table mb-0">
                <thead class="small text-uppercase bg-body text-muted">
                    <tr>
                        <th>Key</th>
                        <th>Value (optional)</th>
                        <th>Data Type</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Route.RouteHeaders != null)
                    {
                        @for (int i = 0; i < Model.Route.RouteHeaders.Count; i++)
                        {
                            <tr class="align-middle" id="header-@i">
                                @Html.HiddenFor(r => r.Route.RouteHeaders[i].RouteHeaderId)
                                @Html.HiddenFor(r => r.Route.RouteHeaders[i].RouteId)
                                <td>@Html.TextBoxFor(r => r.Route.RouteHeaders[i].HeaderKey, null, new {@required = "required"})</td>
                                <td>@Html.TextBoxFor(r => r.Route.RouteHeaders[i].HeaderValue)</td>
                                <td>
                                    @Html.DropDownListFor(
                                             model => model.Route.RouteHeaders[i].DataTypeId,
                                             new SelectList(Model.DataTypes.Items, "Value", "Text", Model.Route.RouteHeaders[i].DataTypeId),
                                             new { @class = "form-control select-data-type" }
                                             )
                                </td>
                                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-primary mt-3 col-2 offset-4" onclick="addHeaderRow()">Add Header</button>
    </div>

    <!--EXPAND ON ROUTE PARAMS HERE-->
    <div class="row mt-3">
        <label class="control-label fw-bold">Route Parameters</label>
        <div class="table-responsive table-route-params">
            <table id="table-route-params" class="table mb-0">
                <thead class="small text-uppercase bg-body text-muted">
                    <tr>
                        <th>Key</th>
                        <th>Value (optional)</th>
                        <th>Data Type</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Route.RouteParameters != null)
                    {
                        @for (int i = 0; i < Model.Route.RouteParameters.Count; i++)
                        {
                            <tr class="align-middle" id="route-param-@i">
                                @Html.HiddenFor(r => r.Route.RouteParameters![i].RouteParameterId)
                                @Html.HiddenFor(r => r.Route.RouteParameters![i].RouteId)
                                <td>@Html.TextBoxFor(r => r.Route.RouteParameters![i].ParameterKey, null, new { @required = "required" })</td>
                                <td>@Html.TextBoxFor(r => r.Route.RouteParameters![i].ParameterValue)</td>
                                <td>
                                    @Html.DropDownListFor(
                                             model => model.Route.RouteParameters![i].DataTypeId,
                                             new SelectList(Model.DataTypes.Items, "Value", "Text", Model.Route.RouteParameters[i].DataTypeId),
                                             new { @class = "form-control select-data-type" }
                                             )
                                </td>
                                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-primary mt-3 col-2 offset-4" onclick="addParamRow()">Add Parameter</button>
    </div>

    <!--EXPAND ON ROUTE BODY HERE-->
    <div class="row mt-3">
        <label class="control-label fw-bold">Body Parameters</label>
        <div class="table-responsive table-route-body-params">
            <table id="table-body-params" class="table mb-0">
                <thead class="small text-uppercase bg-body text-muted">
                    <tr>
                        <th>Key</th>
                        <th>Value (optional)</th>
                        <th>Data Type</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Route.RouteBody != null)
                    {
                        @for (int i = 0; i < Model.Route.RouteBody.RouteBodyParameters.Count; i++)
                        {
                            <tr class="align-middle">
                                @Html.HiddenFor(r => r.Route.RouteBody.RouteBodyParameters[i].RouteBodyId)
                                @Html.HiddenFor(r => r.Route.RouteBody.RouteBodyParameters[i].RouteBodyParameterId)
                                <td>@Html.TextBoxFor(r => r.Route.RouteBody.RouteBodyParameters[i].BodyKey)</td>
                                <td>@Html.TextBoxFor(r => r.Route.RouteBody.RouteBodyParameters[i].BodyValue)</td>
                                <td>
                                    @Html.DropDownListFor(
                                             model => model.Route.RouteBody.RouteBodyParameters[i].DataTypeId,
                                             new SelectList(Model.DataTypes.Items, "Value", "Text", Model.Route.RouteBody.RouteBodyParameters[i].DataTypeId),
                                             new { @class = "form-control select-data-type" }
                                             )
                                </td>
                                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-primary mt-3 col-2 offset-4" onclick="addBodyParamRow()">Add Body Parameter</button>
    </div>

    <div class="row mt-3">
        <div class="form-group col-6">
            <label class="control-label fw-bold">Method Type</label>
            @Html.DropDownListFor(
                     model => model.Route.MethodType.MethodTypeId,
                     new SelectList(
                     Model.MethodTypes.Items,
                     "Value",
                     "Text",
                     Model.Route.MethodType
                     ),
                     new { @class = "form-control", @id="select-list-method-types" }
                     )
        </div>
        <div class="form-group col-6">
            <label class="control-label fw-bold">Application Type</label>
            @Html.DropDownListFor(
                     model => model.Route.RouteBody.ApplicationType.ApplicationTypeId,
                     new SelectList(
                     Model.ApplicationTypes.Items,
                     "Value",
                     "Text",
                     Model.Route.RouteBody?.ApplicationType
                     ),
                     new { @class = "form-control", @id = "select-list-application-types" }
                     )
        </div>
    </div>
    <!--EXPAND ON ROUTE RESPONSE HERE-->
    <button type="submit" class="btn btn-primary mt-3">Save</button>
</form>

@section Scripts {
    <script src="~/js/ussdEdit.js"></script>
}